// Generated file. Do not edit.

def localProperties = new Properties()
def localPropertiesFile = new File(buildscript.sourceFile.parentFile.parentFile, 'local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.library'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'maven-publish'

group 'com.ivo.scm_mobile_sdk'
version '1.0'

// ext {
//     packageName = project.getName()
//     libVersion = "0.0.1"

//     url = 'https://scm.jfrog.io/artifactory'
//     repository = 'sociomile-hybrid-gradle-release-local'
// }

// buildscript {
//     repositories {
//         google()
//         mavenCentral()
//         maven {
//             url 'https://scm.jfrog.io/artifactory/sociomile-hybrid-gradle-release'
// //            url "https://sociomile.jfrog.io/artifactory/sociomile-gradle-release-local/repo"
//         }
//     }

//     dependencies {
//         classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.29.3"
//     }
// }

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 20
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
}

flutter {
    source '../..'
}

//task aar_from_aars(type: Copy) {
//    from('build/host/outputs/repo')
//    into('build/host/outputs/aar')
//    include('*.aar')
//    rename('(.*)', 'my-combined-aar.aar')
//    dependsOn build
//}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

// //AWS

// android.libraryVariants.all { variant ->
//     variant.outputs.all { output ->
//         // This creates a publication for each variant
//         publishing.publications.create(variant.name, MavenPublication) {
//             // The sources artifact from earlier
//             artifact sourceJar
            
//             // Variant dependent artifact, e.g. release, debug
//             artifact source: output.outputFile, classifier: output.name

//             // Go through all the dependencies for each variant and add them to the POM
//             // file as dependencies
//             pom.withXml {
//                 def dependencies = asNode().appendNode('dependencies')

//                 // Filter out anything that's not an external dependency. You shouldn't
//                 // be publishing artifacts that depend on local (e.g. project) dependencies,
//                 // but who knows...
//                 configurations.getByName(variant.name + "CompileClasspath").allDependencies
//                         .findAll { it instanceof ExternalDependency }
//                         .each {
//                     def dependency = dependencies.appendNode('dependency')

//                     dependency.appendNode('groupId', it.group)
//                     dependency.appendNode('artifactId', it.name)
//                     dependency.appendNode('version', it.version)
//                 }
//             }
//         }
//     }
// }

// // Ensure that the publish task depends on assembly
// tasks.all { task ->
//     if (task instanceof AbstractPublishToMaven) {
//         task.dependsOn assemble
//     }
// }

// publishing {
//     repositories {
//         maven {
//             url "s3://sociomile-sdk.s3.amazonaws.com"
//             credentials(AwsCredentials) {
//                 accessKey "AKIATQGAEXMPTWJKIOXN"
//                 secretKey "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"
//             }
//         }
//     }
// }

// JFROG

// apply plugin: 'com.jfrog.artifactory'

// def packageName = packageName
// def libraryVersion = libVersion

// publishing {
//     publications {
//         aar(MavenPublication) {
//             groupId group
//             version = libraryVersion
//             artifactId project.getName()

//             artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
//             pom.withXml {
//                 def dependencies = asNode().appendNode('dependencies')
//                 configurations.getByName("releaseCompileClasspath").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
//                     def dependency = dependencies.appendNode('dependency')
//                     dependency.appendNode('groupId', it.moduleGroup)
//                     dependency.appendNode('artifactId', it.moduleName)
//                     dependency.appendNode('version', it.moduleVersion)
//                 }
//             }
//         }
//     }
// }

// artifactory {
//     contextUrl = url
//     publish {
//         repository {
//             repoKey = repository

//             username = username
//             password = password

//             maven = true
//         }
//         defaults {
//             publications('aar')
//             publishArtifacts = true

//             properties = ['qa.level': 'basic', 'dev.team': 'core']
//             publishPom = true
//         }
//         resolve {
//             repository {
//                 repoKey = 'sociomile-hybrid-gradle-release'
//                 username = username
//                 password = password
//                 maven = true

//             }
//         }
//     }
// }

// artifactory {
//    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
//    publish {
//        repository {
//            repoKey = 'sociomile-gradle-release-local'
//            username = "${artifactory_user}"
//            password = "${artifactory_password}"
//            maven = true
//        }
//        defaults {
//            publishArtifacts = true
//            properties = ['qa.level': 'basic', 'dev.team' : 'core']
//            publishPom = true // Publish generated POM files to Artifactory (true by default)
//        }
//    }
//    resolve {
//        repository {
//            repoKey = 'sociomile-gradle-release'
//            username = "${artifactory_user}"
//            password = "${artifactory_password}"
//            maven = true

//        }
//    }
// }